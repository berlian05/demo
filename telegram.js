const TELEGRAM_BOT_TOKEN = '7993946782:AAEgeQAdJgndQN7M7DCsmco63F3t90ITNxM';
// –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –Ω–æ–≤—ã–π ID –≥—Ä—É–ø–ø—ã, –∫–æ—Ç–æ—Ä—ã–π –≤—ã –ø–æ–ª—É—á–∏–ª–∏ –æ—Ç @getmyid_bot
const TELEGRAM_CHAT_ID = '-1002347225027';

async function sendTelegramNotification(repair) {
    try {
        const message = formatRepairMessage(repair);
        const url = `https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`;
        
        const response = await fetch(url, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                chat_id: TELEGRAM_CHAT_ID,
                text: message,
                parse_mode: 'HTML'
            })
        });

        const data = await response.json();
        if (!data.ok) {
            throw new Error(`Telegram API Error: ${data.description}`);
        }
        
        console.log('–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram');
        return true;
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:', error);
        return false;
    }
}

function formatRepairMessage(repair) {
    const type = repair.isEmergency ? 'üö® –í–ù–ï–ü–õ–ê–ù–û–í–û–ï –û–¢–ö–õ–Æ–ß–ï–ù–ò–ï' : 'üîß –ü–ª–∞–Ω–æ–≤—ã–µ —Ä–∞–±–æ—Ç—ã';
    const status = repair.resolved ? '‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–æ' : 'üîÑ –í —Ä–∞–±–æ—Ç–µ';
    const startDate = new Date(repair.startDate).toLocaleString('ru-RU');
    const endDate = repair.endDate ? new Date(repair.endDate).toLocaleString('ru-RU') : '–ù–µ —É–∫–∞–∑–∞–Ω–æ';

    return `
<b>${type}</b>

üìç <b>–ì–æ—Ä–æ–¥:</b> ${repair.city}
üè† <b>–ê–¥—Ä–µ—Å:</b> 
${repair.streets.map((street, i) => `- —É–ª. ${street}, –¥–æ–º–∞: ${repair.houses[i]}`).join('\n')}

‚è∞ <b>–ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç:</b> ${startDate}
üèÅ <b>–ü–ª–∞–Ω–∏—Ä—É–µ–º–æ–µ –æ–∫–æ–Ω—á–∞–Ω–∏–µ:</b> ${endDate}

<b>–°—Ç–∞—Ç—É—Å:</b> ${status}
`;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
async function sendTestMessage() {
    const testRepair = {
        city: '–¢–µ—Å—Ç–æ–≤—ã–π –≥–æ—Ä–æ–¥',
        streets: ['–¢–µ—Å—Ç–æ–≤–∞—è —É–ª–∏—Ü–∞'],
        houses: ['1'],
        isEmergency: false,
        startDate: new Date().toISOString(),
        endDate: new Date(Date.now() + 86400000).toISOString(),
        resolved: false
    };

    const result = await sendTelegramNotification(testRepair);
    if (result) {
        alert('–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!');
    } else {
        alert('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è');
    }
} 